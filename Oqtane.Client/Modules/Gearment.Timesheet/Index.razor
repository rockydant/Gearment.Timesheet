@using Gearment.Timesheet.Services
@using Gearment.Timesheet.Models
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Inputs
@using Microsoft.AspNetCore.Components.Forms
@using System.IO

@namespace Gearment.Timesheet
@inherits ModuleBase
@inject ITimesheetService TimesheetService
@inject NavigationManager NavigationManager

@if (_Timesheets == null)
{
<p><em>Loading...</em></p> }
else
{
<ActionLink Action="Upload" class="btn btn-info" Text="Import Data" Parameters="@($"id=" + _folderId.ToString())" ResourceKey="UploadFiles" />
                <br />
                                <br />
                                <SfGrid DataSource="@_Timesheets" AllowPaging="true" AllowSorting="true">
                                    <GridColumns>
                                        <GridColumn Field=@nameof(TimesheetData.FirstName) HeaderText="First Name" TextAlign="TextAlign.Left" Width="120"></GridColumn>
                                        <GridColumn Field=@nameof(TimesheetData.LastName) HeaderText="Last Name" TextAlign="TextAlign.Left" Width="100"></GridColumn>
                                        <GridColumn Field=@nameof(TimesheetData.PayrollID) HeaderText="Payroll ID" TextAlign="TextAlign.Left" Width="100"></GridColumn>
                                        <GridColumn Field=@nameof(TimesheetData.DayOfWeek) HeaderText="Date Of Week" TextAlign="TextAlign.Left" Width="100"></GridColumn>
                                        <GridColumn Field=@nameof(TimesheetData.Date) HeaderText="Date" TextAlign="TextAlign.Left" Width="100"></GridColumn>
                                        <GridColumn HeaderText="Start Time" TextAlign="TextAlign.Center" Width="120">
                                            <Template>
                                                @{ var department = (context as TimesheetData);
                                    <Label class="form-group label">@department.DailyStartTime.ToString("hh:mm tt")</Label> }
                                            </Template>
                                        </GridColumn>
                                        <GridColumn HeaderText="End Time" TextAlign="TextAlign.Center" Width="120">
                                            <Template>
                                                @{ var department = (context as TimesheetData);
                                    <Label class="form-group label">@department.DailyEndTime.ToString("hh:mm tt")</Label>
                                                }
                                            </Template>
                                        </GridColumn>
                                        <GridColumn HeaderText="Break Start" TextAlign="TextAlign.Center" Width="120">
                                            <Template>
                                                @{ var department = (context as TimesheetData);
                                    <Label class="form-group label">@department.BreakStartTime.ToString("hh:mm tt")</Label> }
                                            </Template>
                                        </GridColumn>
                                        <GridColumn HeaderText="Break End" TextAlign="TextAlign.Center" Width="120">
                                            <Template>
                                                @{ var department = (context as TimesheetData);
                                                    <Label class="form-group label">@department.BreakEndTime.ToString("hh:mm tt")</Label>
                                                }
                                            </Template>
                                        </GridColumn>                                       
                                    </GridColumns>
                                </SfGrid>
                            }

<!-- The content below is for informational purposes only and can be safely removed -->

<br />
<br />
<!-- The content above is for informational purposes only and can be safely removed -->

@code { public override List<Resource> Resources => new List<Resource>()
{
        new Resource { ResourceType = ResourceType.Stylesheet, Url = ModulePath() + "Module.css" },
        new Resource { ResourceType = ResourceType.Script, Url = ModulePath() + "Module.js" }
    };

    List<TimesheetData> _Timesheets;
    private int _folderId = 1;

    private bool ImportExcelDialogEnable { get; set; } = false;

    public override SecurityAccessLevel SecurityAccessLevel => SecurityAccessLevel.Admin;

    protected override async Task OnInitializedAsync()
    {
        if (PageState.QueryString.ContainsKey("id"))
        {
            _folderId = int.Parse(PageState.QueryString["id"]);
        }

        try
        {
            _Timesheets = await TimesheetService.GetTimesheetDataAsync(ModuleState.ModuleId);
        }
        catch (Exception ex)
        {
            await logger.LogError(ex, "Error Loading Timesheet {Error}", ex.Message);
            AddModuleMessage("Error Loading Timesheet", MessageType.Error);
        }
    }

    private async Task Delete(Timesheet Timesheet)
    {
        try
        {
            await TimesheetService.DeleteTimesheetAsync(Timesheet.TimesheetId, ModuleState.ModuleId);
            await logger.LogInformation("Timesheet Deleted {Timesheet}", Timesheet);
            //_Timesheets = await TimesheetService.GetTimesheetsAsync(ModuleState.ModuleId);
            StateHasChanged();
        }
        catch (Exception ex)
        {
            await logger.LogError(ex, "Error Deleting Timesheet {Timesheet} {Error}", Timesheet, ex.Message);
            AddModuleMessage("Error Deleting Timesheet", MessageType.Error);
        }
    } }